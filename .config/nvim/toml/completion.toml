# Last Change : Sat 12 Jan 2019 01:52:18.
[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
" SuperTab like snippets behavior.
" Note: It must be "imap" and "smap".  It uses <Plug> mappings.
" imap <expr><TAB>
"   \ pumvisible() ? "\<C-n>" :
"   \ neosnippet#expandable_or_jumpable() ?
"   \    "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"
  smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
    \ "\<Plug>(neosnippet_expand_or_jump)" : "\<TAB>"

  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_ft = ['snippet']

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = ['vim']

[[plugins]]
repo = 'Shougo/neco-syntax'

[[plugins]]
repo = 'zchee/deoplete-jedi'
on_i = 1
on_ft = ['python']
hook_source = '''
    let g:deoplete#source#jedi#python_path=system("which python")
    let g:deoplete#source#jedi#statement_length=100
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
on_i = 1
on_ft = ['c', 'cpp']
hook_source = '''
    let g:deoplete#sources#clang#libclang_path='/usr/lib/libclang.so'
    let g:deoplete#sources#clang#clang_header='/usr/include'
'''

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'zchee/deoplete-go'
build = 'make'
on_i = 1
on_ft = ['go']
hook_source = '''
    let g:deoplete#sources#go#gocode_binary= $GOPATH . '/bin/gocode'
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = ['go']
do = ':GoInstallBinaries'

[[plugins]]
repo = 'eagletmt/neco-ghc'
on_i = 1
